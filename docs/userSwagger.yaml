/api/user/current:
  get:
    summary: Get current user
    tags:
      - User
    description: Returns information about the current user. Requires a valid authentication token.
    parameters:
      - in: header
        name: Authorization
        description: Bearer token
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIi...
    responses:
      "200":
        description: OK. Returns information about the authenticated user.

      "401":
        description: Unauthorized. The authentication token is missing or invalid.

/api/user/logout:
  post:
    summary: User Logout
    tags:
      - User
    description: Request to log out the current authenticated user from the system.
    parameters:
      - in: header
        name: Authorization
        description: Bearer Token
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIi...
    responses:
      "204":
        description: Successful user logout.
      "401":
        description: User is not authenticated in the system.
      "500":
        description: Server error.
    security:
      - bearerAuth: []

/api/user/info:
  patch:
    summary: Update user information
    description: Update the user information with the provided fields. Requires authentication token.
    tags:
      - User
    consumes:
      - application/json
    parameters:
      - in: header
        name: Authorization
        type: string
        description: Bearer Token
        required: true
        schema:
          type: string
          example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIi...
      - in: body
        name: updatedFields
        description: User information to be updated
        required: true
        schema:
          type: object
          properties:
            name:
              type: string
              minLength: 3
              maxLength: 16
              pattern: "^[a-zA-Z.'-]{3,16}$"
            email:
              type: string
              format: email
              description: Valid email address of the user
              required: true
            phone:
              type: string
              pattern: "^(\\+\\d{1,3}\\s)?\\(\\d{3}\\)\\s\\d{3}-\\d{4}$"
              description: Phone number of the user in the format "+X (XXX) XXX-XXXX"
            telegram:
              type: string
              pattern: "(?: ?^@)[a-z0-9_]{5,32}$"
              description: Telegram username of the user starting with "@" and containing 5-32 characters (letters, digits, and underscores)
            birthday:
              type: string
              format: date
              description: Date of birth of the user in ISO format, must not be after the current date and not before 01.01.1914
    responses:
      200:
        description: User information updated successfully
      400:
        description: Invalid request body or invalid user information
      500:
        description: Internal server error
